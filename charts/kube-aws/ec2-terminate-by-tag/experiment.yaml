apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Detaching an ebs volume from ec2 instance.
kind: ChaosExperiment
metadata:
  name: ec2-terminate-by-tag
  labels:
    name: ec2-terminate-by-tag
    app.kubernetes.io/part-of: litmus
    app.kubernetes.io/component: chaosexperiment
    app.kubernetes.io/version: 2.5.0
spec:
  definition:
    scope: Cluster
    permissions:
      # Create and monitor the experiment & helper pods
      - apiGroups: [""]
        resources: ["pods"]
        verbs: ["create","delete","get","list","patch","update", "deletecollection"]
      # Performs CRUD operations on the events inside chaosengine and chaosresult
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["create","get","list","patch","update"]
      # Fetch configmaps & secrets details and mount it to the experiment pod (if specified)
      - apiGroups: [""]
        resources: ["secrets","configmaps"]
        verbs: ["get","list",]
      # Track and get the runner, experiment, and helper pods log 
      - apiGroups: [""]
        resources: ["pods/log"]
        verbs: ["get","list","watch"]  
      # for creating and managing to execute comands inside target container
      - apiGroups: [""]
        resources: ["pods/exec"]
        verbs: ["get","list","create"]
      # for configuring and monitor the experiment job by the chaos-runner pod
      - apiGroups: ["batch"]
        resources: ["jobs"]
        verbs: ["create","list","get","delete","deletecollection"]
      # for creation, status polling and deletion of litmus chaos resources used within a chaos workflow
      - apiGroups: ["litmuschaos.io"]
        resources: ["chaosengines","chaosexperiments","chaosresults"]
        verbs: ["create","list","get","patch","update","delete"]
      # for experiment to perform node status checks
      - apiGroups: [""]
        resources: ["nodes"]
        verbs: ["get","list"]
    image: "litmuschaos/go-runner:2.5.0"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name ec2-terminate-by-tag
    command:
    - /bin/bash
    env:
    - name: TOTAL_CHAOS_DURATION
      value: '30'

    - name: CHAOS_INTERVAL
      value: '30'

    # Period to wait before and after injection of chaos in sec
    - name: RAMP_TIME
      value: ''

    - name: INSTANCE_TAG
      value: ''

    # enable it if the target instance is a part of self-managed nodegroup.
    - name: MANAGED_NODEGROUP
      value: 'disable'

    - name: REGION
      value: ''

    # Target the percentage of instance filtered from tag
    - name: INSTANCE_AFFECTED_PERC
      value: ''

    - name: SEQUENCE
      value: 'parallel'      

    # Provide the path of aws credentials mounted from secret  
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: '/tmp/cloud_config.yml'

    # provide the LIB
    # only litmus supported
    - name: LIB
      value: 'litmus'  
          
    labels:
      name: ec2-terminate-by-tag
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/version: 2.5.0
    secrets:
    - name: cloud-secret
      mountPath: /tmp/
