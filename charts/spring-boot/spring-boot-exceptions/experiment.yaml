apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    It can target random pods with a Spring Boot application and allows configuring the assaults to inject network latency
kind: ChaosExperiment
metadata:
  name: spring-boot-exceptions
  labels:
    name: spring-boot-exceptions
    app.kubernetes.io/part-of: litmus
    app.kubernetes.io/component: chaosexperiment
    app.kubernetes.io/version: latest
spec:
  definition:
    scope: Namespaced
    permissions:
      # Create and monitor the experiment & helper pods
      - apiGroups: [ "" ]
        resources: [ "pods" ]
        verbs: [ "create","delete","get","list","patch","update", "deletecollection" ]
      # Performs CRUD operations on the events inside chaosengine and chaosresult
      - apiGroups: [ "" ]
        resources: [ "events" ]
        verbs: [ "create","get","list","patch","update" ]
      # Track and get the runner, experiment, and helper pods log
      - apiGroups: [ "" ]
        resources: [ "pods/log" ]
        verbs: [ "get","list","watch" ]
      # for creating and managing to execute commands inside target container
      - apiGroups: [ "" ]
        resources: [ "pods/exec" ]
        verbs: [ "get","list","create" ]
      # for configuring and monitor the experiment job by the chaos-runner pod
      - apiGroups: [ "batch" ]
        resources: [ "jobs" ]
        verbs: [ "create","list","get","delete","deletecollection" ]
      # for creation, status polling and deletion of litmus chaos resources used within a chaos workflow
      - apiGroups: [ "litmuschaos.io" ]
        resources: [ "chaosengines","chaosexperiments","chaosresults" ]
        verbs: [ "create","list","get","patch","update","delete" ]
    image: "litmuschaos/go-runner:latest"
    imagePullPolicy: Always
    args:
    - -c
    - ./experiments -name spring-boot-exceptions
    command:
    - /bin/bash
    env:

    # Type of raised exception
    - name: CM_EXCEPTIONS_TYPE
      value: 'java.lang.IllegalArgumentException'

      # Argument of raised exception
    - name: CM_EXCEPTIONS_ARGUMENTS
      value: 'java.lang.String:custom illegal argument exception'

    # port of the spring boot application
    - name: CM_PORT
      value: ''

    #it contains number of requests are to be attacked
    # n value means nth request will be affected
    - name: CM_LEVEL
      value: '1'

    # it limits watched packages/classes/methods
    - name: CM_WATCHED_CUSTOM_SERVICES
      value: ''

    # provide name of watcher
    # it supports controller, restController, service, repository, component, webClient
    - name: CM_WATCHERS
      value: 'restController'

    - name: TOTAL_CHAOS_DURATION
      value: '30'

    ## percentage of total pods to target
    - name: PODS_AFFECTED_PERC
      value: ''

    ## Period to wait before and after injection of chaos  
    - name: RAMP_TIME
      value: ''

    ## it defines the sequence of chaos execution for multiple target pods
    ## supported values: serial, parallel
    - name: SEQUENCE
      value: 'parallel'

    labels:
      name: spring-boot-exceptions
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/version: latest
