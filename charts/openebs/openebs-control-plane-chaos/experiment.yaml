---
apiVersion: litmuschaos.io/v1alpha1
description:
  message: |
    Kill all openebs control plane pod and check if gets scheduled again
kind: ChaosExperiment
metadata:
  labels:
    litmuschaos.io/name: openebs
    name: openebs-control-plane-chaos
    app.kubernetes.io/part-of: litmus
    app.kubernetes.io/component: chaosexperiment
    app.kubernetes.io/version: latest
  name: openebs-control-plane-chaos
spec:
  definition:
    scope: Namespaced
    permissions:
      - apiGroups:
          - ""
          - "litmuschaos.io"
          - "batch"
          - "apps"
        resources:
          - "pods"
          - "pods/log"
          - "deployments"
          - "events"
          - "jobs"
          - "configmaps"
          - "chaosengines"
          - "chaosexperiments"
          - "chaosresults"
        verbs:
          - "create"
          - "list"
          - "get"
          - "patch"
          - "update"
          - "delete"
      - apiGroups:
          - ""
        resources:
          - "nodes"
        verbs:
          - "get"
          - "list"
      
    image: "litmuschaos/ansible-runner:latest"
    imagePullPolicy: Always
    args:
    - -c
    - ansible-playbook ./experiments/openebs/openebs-control-plane-chaos/openebs_control_plane_chaos_ansible_logic.yml -i /etc/ansible/hosts -vv; exit 0
    command:
    - /bin/bash
    env:
    - name: ANSIBLE_STDOUT_CALLBACK
      value: 'default'

    - name: OPENEBS_NAMESPACE
      value: 'openebs'

    ## Period to wait before injection of chaos  
    - name: RAMP_TIME
      value: ''
    
    - name: FORCE
      value: ''

    ## env var that describes the library used to execute the chaos
    ## default: litmus. Supported values: litmus, powerfulseal
    - name: LIB
      value: ''

    labels:
      name: openebs-control-plane-chaos
      app.kubernetes.io/part-of: litmus
      app.kubernetes.io/component: experiment-job
      app.kubernetes.io/version: latest
